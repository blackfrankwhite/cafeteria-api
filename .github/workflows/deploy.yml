name: Deploy Laravel to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up PHP environment for Laravel
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, xml

      # Step 3: Test if Secrets are Available
      - name: Check Secrets Presence
        run: |
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "EC2_HOST secret is missing!"
          else
            echo "EC2_HOST is set."
          fi

          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "SSH_PRIVATE_KEY secret is missing!"
          else
            echo "SSH_PRIVATE_KEY is set."
          fi

      # Step 4: Install Composer dependencies for Laravel
      - name: Install Composer dependencies
        run: composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader

      # Step 5: Sync code to EC2 instance using SCP
      - name: Sync files to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: './'
          target: '/var/www/cafeteria-api'

      # Step 6: SSH into EC2 and run deployment commands
      - name: SSH to EC2 and run deployment commands
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/cafeteria-api
            composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart nginx
            sudo systemctl restart php8.3-fpm
